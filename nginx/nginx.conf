# nginx/nginx.conf

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 10000;     # Pour supporter 5000 utilisateurs
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml;

    # Cache pour fichiers statiques
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

    # Upstream pour serveurs de signalisation
    upstream signaling_servers {
        ip_hash;                      # Session persistence
        server signaling1:3000;
        server signaling2:3000;
        server signaling3:3000;
        keepalive 32;
    }

    # Upstream pour serveurs Janus
    upstream janus_servers {
        least_conn;                   # Équilibrage de charge par connexions
        server janus1:8088;
        server janus2:8088;
        server janus3:8088;
        keepalive 32;
    }

    # Configuration SSL commune
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Serveur frontend
    server {
        listen 80;
        listen [::]:80;
        server_name app.votre-domaine.com;
        
        # Redirection vers HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name app.votre-domaine.com;

        # Configuration SSL
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # En-têtes de sécurité
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

        # Fichiers statiques
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Cache des fichiers statiques
            location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, no-transform";
                proxy_cache STATIC;
                proxy_ignore_headers Cache-Control;
                proxy_cache_valid 60m;
            }
        }

        # API de signalisation
        location /socket.io/ {
            proxy_pass http://signaling_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;    # Pour les longues connexions WebSocket
        }

        # API Janus
        location /janus/ {
            proxy_pass http://janus_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;
        }
    }

    # Serveur métriques Prometheus
    server {
        listen 127.0.0.1:9913;
        
        location /metrics {
            stub_status on;
        }
    }
}

stream {
    # Configuration pour le trafic TURN
    upstream turn_servers {
        server turn1:3478;
        server turn2:3478;
    }

    server {
        listen 3478 udp;
        listen 3478;
        proxy_pass turn_servers;
        proxy_timeout 30s;
        proxy_connect_timeout 5s;
    }

    server {
        listen 5349 ssl;
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        proxy_pass turn_servers;
        proxy_timeout 30s;
        proxy_connect_timeout 5s;
    }
}